6 pts

Correctness:

- The program produces incorrect output. For the following acceptable solution,
  your program says it is not:
--
$ java driverDFA
gncgwnnng  
That is not a solution.
--
also, your program is required to run as follows:
--
$ java driverDFA gncgwng
--
that is, taking an argument; but your program is not doing that.

- The program produces output in the correct format.


Style:

- Both files have major style problems. You are not following the style
  guidelines.

- Incorrect indentation in both the driver and ManWolf files. Please use a
  two-space indentation.

- Poor block comments

- Both files have incorrect headers. Remember: Each file must have a block
  comment at the top which gives the name of the file, the student's name, the
  assignment, the date, the version, and a comment about what is contained in
  the file. For example:
/**
 * file: SinglyLinkedList.java
 * author: student name
 * course: CMPT 220
 * assignment: project 1
 * due date: August 30, 2003
 * version: 1.3
 * 
 * This file contains the declaration of the SinglyLinkedList abstract data
 * type.
 */

- Both files have incorrect method header formatting. Each function must have a
  comment block before it, which gives the function name, describes each
  parameter and the return value (if any), and explains the purpose of the
  function. Refer to the parameters by name, not by type. Here is an example:
/**
 * factorial
 *
 * This function computes the factorial of the given input. The factorial is
 * defined as factorial(n) = n! = n * (n-1) * (n-2) * ... * 3 * 2 * 1.
 * 
 * Parameters:
 *   n: the number on which to compute the factorial
 * 
 * Return value: the factorial of n, or 1 if n <= 0.
 */
public static int factorial(int n) {
  if (n <= 0) {
    return 1;
  }
  return n * factorial(n - 1);
}

- Classes do not have a description. Each class declaration must have a comment
  block before it, which gives the class name and describes the purpose of the
  class. Here is an example:
/**
 * SinglyLinkedList
 * 
 * This class implements a linked list with single forward links, and supports
 * dynamic addition and deletion of nodes. 
 */
public class SinglyLinkedList {
  // ...
}

- You are using TABs!!!

- Code (or comments) go beyond 100 characters. Keep lines of code short.
  Optimally 80 characters, but no more than 100.


Efficiency and Other Comments:

- Program is very inefficient as implemented. You were supposed to use a
  table-driven implementation.


CSV files:

- State-transition table looks good.

- State descriptions table is missing.


- Dr. Rivas
